DELIMITER //

CREATE PROCEDURE Customer.PrCustomerChurn()
BEGIN

    DECLARE VarCurrentTimestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
    DECLARE VarSourceRowCount, VarTargetRowCount, VarThresholdNbr INTEGER DEFAULT 0;
    DECLARE VarTinyIntVal TINYINT;

    -- Get Source and Target Row Counts
    SELECT COUNT(*)
    INTO VarSourceRowCount
    FROM Customer.CustomerChurn_Stage;

    SELECT COUNT(*)
    INTO VarTargetRowCount
    FROM Customer.CustomerChurn;

    -- Calculate Threshold (20% of Target Row Count)
    SELECT CAST((VarTargetRowCount * 0.2) AS UNSIGNED)
    INTO VarThresholdNbr;

    -- Check if Source Row Count is less than Threshold
    IF VarSourceRowCount < VarThresholdNbr THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Source row count is less than 20% of target row count.';
    END IF;

    -- Delete rows in Target that are not in Source
    DELETE FROM Customer.CustomerChurn
    WHERE CustomerId NOT IN (SELECT CustomerId FROM Customer.CustomerChurn_Stage);

    -- Update rows that have changed
    UPDATE Customer.CustomerChurn AS TrgtTbl
    INNER JOIN Customer.CustomerChurn_Stage AS SrcTbl
    ON TrgtTbl.CustomerId = SrcTbl.CustomerId
    SET TrgtTbl.Surname = SrcTbl.Surname,
        TrgtTbl.CreditScore = SrcTbl.CreditScore,
        TrgtTbl.Geography = SrcTbl.Geography,
        TrgtTbl.Gender = SrcTbl.Gender,
        TrgtTbl.Age = SrcTbl.Age,
        TrgtTbl.Balance = SrcTbl.Balance,
        TrgtTbl.Exited = SrcTbl.Exited,
        TrgtTbl.ChangeAgentId = CURRENT_USER(),
        TrgtTbl.ChangeDtm = VarCurrentTimestamp
    WHERE TrgtTbl.CustomerId = SrcTbl.CustomerId AND (
        COALESCE(TrgtTbl.Surname, '*') <> COALESCE(SrcTbl.Surname, '*') OR
        COALESCE(TrgtTbl.CreditScore, '*') <> COALESCE(SrcTbl.CreditScore, '*') OR
        COALESCE(TrgtTbl.Geography, '*') <> COALESCE(SrcTbl.Geography, '*') OR
        COALESCE(TrgtTbl.Gender, '*') <> COALESCE(SrcTbl.Gender, '*') OR
        COALESCE(TrgtTbl.Age, '*') <> COALESCE(SrcTbl.Age, '*') OR
        COALESCE(TrgtTbl.Balance, '*') <> COALESCE(SrcTbl.Balance, '*') OR
        COALESCE(TrgtTbl.Exited, '*') <> COALESCE(SrcTbl.Exited, '*')
    );

    -- Insert new rows
    INSERT INTO Customer.CustomerChurn (
        CustomerId, Surname, CreditScore, Geography, Gender, Age, Balance, Exited,
        SourceSystemNm, CreateAgentId, CreateDtm, ChangeAgentId, ChangeDtm
    )
    SELECT 
        SrcTbl.CustomerId, SrcTbl.Surname, SrcTbl.CreditScore, SrcTbl.Geography,
        SrcTbl.Gender, SrcTbl.Age, SrcTbl.Balance, SrcTbl.Exited,
        'Kaggle-CSV', CURRENT_USER(), VarCurrentTimestamp, CURRENT_USER(), VarCurrentTimestamp
    FROM Customer.CustomerChurn_Stage AS SrcTbl
    LEFT JOIN Customer.CustomerChurn AS TrgtTbl
    ON SrcTbl.CustomerId = TrgtTbl.CustomerId
    WHERE TrgtTbl.CustomerId IS NULL;

END //

DELIMITER ;

SET SQL_SAFE_UPDATES = 1;